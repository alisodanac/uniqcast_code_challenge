// Mocks generated by Mockito 5.4.4 from annotations
// in uniqcast_code_challenge/test/features/channels/data/repository/channels_repository_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i3;

import 'package:hive/hive.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:uniqcast_code_challenge/core/managers/network_manager/network_info_manager.dart'
    as _i9;
import 'package:uniqcast_code_challenge/features/channels/data/datasource/local/channels_local_datasource.dart'
    as _i8;
import 'package:uniqcast_code_challenge/features/channels/data/datasource/remote/channels_remote_data_source.dart'
    as _i5;
import 'package:uniqcast_code_challenge/features/channels/data/datasource/remote/xml_parser.dart'
    as _i2;
import 'package:uniqcast_code_challenge/features/channels/data/models/channel/channel_model.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeXmlEpgParser_0 extends _i1.SmartFake implements _i2.XmlEpgParser {
  _FakeXmlEpgParser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClient_1 extends _i1.SmartFake implements _i3.HttpClient {
  _FakeHttpClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHiveInterface_2 extends _i1.SmartFake implements _i4.HiveInterface {
  _FakeHiveInterface_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChannelsRemoteDataSourceImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockChannelsRemoteDataSourceImp extends _i1.Mock
    implements _i5.ChannelsRemoteDataSourceImp {
  MockChannelsRemoteDataSourceImp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.XmlEpgParser get xmlEpgParser => (super.noSuchMethod(
        Invocation.getter(#xmlEpgParser),
        returnValue: _FakeXmlEpgParser_0(
          this,
          Invocation.getter(#xmlEpgParser),
        ),
      ) as _i2.XmlEpgParser);

  @override
  _i3.HttpClient get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeHttpClient_1(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i3.HttpClient);

  @override
  _i6.Future<List<_i7.ChannelModel>> fetchEpgChannels() => (super.noSuchMethod(
        Invocation.method(
          #fetchEpgChannels,
          [],
        ),
        returnValue:
            _i6.Future<List<_i7.ChannelModel>>.value(<_i7.ChannelModel>[]),
      ) as _i6.Future<List<_i7.ChannelModel>>);
}

/// A class which mocks [ChannelsLocalDatasourceImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockChannelsLocalDatasourceImp extends _i1.Mock
    implements _i8.ChannelsLocalDatasourceImp {
  MockChannelsLocalDatasourceImp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.HiveInterface get hive => (super.noSuchMethod(
        Invocation.getter(#hive),
        returnValue: _FakeHiveInterface_2(
          this,
          Invocation.getter(#hive),
        ),
      ) as _i4.HiveInterface);

  @override
  set hive(_i4.HiveInterface? _hive) => super.noSuchMethod(
        Invocation.setter(
          #hive,
          _hive,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> saveChannels(List<_i7.ChannelModel>? channelsList) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveChannels,
          [channelsList],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i7.ChannelModel>> retrieveChannels() => (super.noSuchMethod(
        Invocation.method(
          #retrieveChannels,
          [],
        ),
        returnValue:
            _i6.Future<List<_i7.ChannelModel>>.value(<_i7.ChannelModel>[]),
      ) as _i6.Future<List<_i7.ChannelModel>>);
}

/// A class which mocks [NetworkInfoManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoManager extends _i1.Mock
    implements _i9.NetworkInfoManager {
  MockNetworkInfoManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
